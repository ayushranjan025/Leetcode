class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int left= 0; //starting column
        int right = matrix[0].length -1;//ending column
        int top = 0;//starting row
        int bottom = matrix.length -1;// ending row

        List<Integer> ans = new ArrayList<>();

        while(top<=bottom && left<=right){
            //top
            for(int i=left; i<=right; i++){
                ans.add(matrix[left][i]);
            }
            top++;

            //right
            for(int i=top; i<=bottom; i++){
                ans.add(matrix[i][right]);
            }
            right--;

            if(top<= bottom){
                //bottom
                for(int i= right; i>=left; i--){
                    ans.add(matrix[bottom][i]);
                }
                bottom--;
            }

            if(left<= right){
                //left
                for(int i=bottom; i>=top; i--){
                   ans.add(matrix[i][left]);
                }
                left++;

            }
            
        }
        return ans;
    }
}
